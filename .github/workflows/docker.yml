on: [push, pull_request]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: $GITHUB_REPOSITORY_OWNER/pixelart

name: Test & Docker Build/Push
jobs:
  check_skip_flags:
    runs-on: ubuntu-latest
    outputs:
      head-commit-message: ${{ steps.get_head_commit_message.outputs.HEAD_COMMIT_MSG }}
    steps:
      - name: Get repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Print head git commit message
        id: get_head_commit_message
        run: echo "HEAD_COMMIT_MSG=$(git show -s --format=%s)" >> $GITHUB_OUTPUT
  test:
    needs: [check_skip_flags]
    if: "!contains(needs.check_skip_flags.outputs.head-commit-message, '[skip-test]')"
    uses: ./.github/workflows/test.yml
    secrets: inherit
  docker:
    needs: [test]
    if: "!contains(needs.check_skip_flags.outputs.head-commit-message, '[skip-docker]')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=raw,value=latest,enable=${{ endsWith(GitHub.ref, 'main') }}
            type=raw,event=branch,value={{branch}}
            type=semver,pattern={{raw}}
            type=sha,format=long
      - name: Build and push Docker image
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: _github
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/pkgs/container/pixelart
          SLACK_TITLE: Docker Image Build & Push - pixelart
          SLACK_USERNAME: _whyvrafvr
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
